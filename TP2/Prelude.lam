
-- identidad
def id = \x . x 

-- Booleanos
def true = \ t f . t
def false = \t f . f

def and = \a b. a b false
def or  = \a b. a true b

-- Pares
def pair = \x y p . p x y

def fst = \p . p true
def snd = \p . p false

-- Numerales de Church
def zero = \s z . z
def suc = \n s z . s (n s z)

def is0 = \n . n (\ x . false) true

def add = \n m s z . n s (m s z)
def mult = \n m s z . n (m s) z

def res = \n m. m pred n

def pred = \ n . fst (n (\p . pair (snd p) (suc (snd p))) (pair zero zero))

--Listas
def nil = \c n . n
def cons = \x xs c n . c x (xs c n)

def isnil = \xs . xs (\x ys . false) true

-- Combinador de Punto Fijo
def Y = \f . (\x . f (x x)) (\x . f (x x))

-- factorial
def fact = Y (\f n. (is0 n) (suc zero) (mult n (f (pred n))))

-- bottom
def bottom = (\x . x x) (\x . x x)

--Practica 5

def leaf = \l b. l
def bin = \a t u l b. b a (l b t) (l b u)

def isLeaf = \t. t true (\x y z. false)

def max = \x y. is0 (res x y) y x

def heightBin = \t. t 0 (\a t u. add 1 (max t u))

def mirrorBin = \t. t leaf (\a t u.bin a u t)

-- Segundo Parcial 
def R = \x.x
def z = \f z.z
def succ = \n f z. f (n f z) n

def predd = \n. n (\r m. m) (\f z.z)
